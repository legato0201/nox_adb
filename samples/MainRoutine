# マクロの作成に関する個人的な考え方

最近のスマホゲームは、デイリークエストがあるものが殆どだろう。
おそらく一番めんどくさいので、これから自動化するのが基本だと思う。
最近は３Dゲームが多く本来画像認識系のBOTは難しいのだが、スマホ用に自動狩りや目的地まで自動的に移動する機能が備わっているので、各状態を判断できる画像データさえ用意できれば自動化は可能である。

短期間では肉入りプレイヤーと比べて遅れがちになるが、長い目で見ると圧倒的に自動化した方が強くなるのは間違いない。
しかし、残念なことに月額課金制のゲームは死滅してしまったので、課金者を超えるような強さを得ることは出来ないと諦めたほうが良い。

このリポジトリでは備忘録として基本的な動作を行うのに必要な関数をまとめておく。
あとは各自で自動化のために必要な画像を見つけること、動作させながらエラートラップを追加しながら確実に動作するマクロを作り上げる一種の作業ゲームである。

# なぜNOXとPythonなのか

各自好きなものを使えば良いと思うが、今のところ一番簡単にマクロが作れると思う。
Pythonの豊富な外部モジュールを利用すればPCスペックが許す限り何でも出来る。
ちなみに、以前はUWSCやAutomator(macOS)などを使用していた。
UWSCはかなり優秀なアプリなのだが、すでに更新されていないため、最近のOSではバックグラウンドでマクロを動作させることができなくなってしまった。
ただ、マクロの作成にあたって、画像の位置や色を確認する作業が9割を占めるので、UWSCで動作する補助ツールは未だに使っている。

# 自動マクロの流れ

初期化処理｛
・NOX起動
・アプリ起動
・INIで設定読み込み
・時間チェック（デイリーなどの時間リセット）
｝

メインルーチン｛
　・デイリークエスト消化
　・通常のクエストなど消化
　・その他
｝

終了処理｛
　・INI保存
　・アプリ終了
　・NOX終了
｝

　
